$version Generated by VerilatedVcd $end
$date Wed Jul 17 14:11:55 2019
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 7! clock $end
  $var wire  1 8! reset $end
  $var wire  1 9! sim_clock $end
  $var wire  1 :! sim_wait $end
  $scope module TestAccel $end
   $var wire  1 7! clock $end
   $var wire  1 8! reset $end
   $var wire  1 9! sim_clock $end
   $var wire  1 7! sim_shell_clock $end
   $var wire  8 1! sim_shell_host_req_addr [7:0] $end
   $var wire  1 # sim_shell_host_req_deq $end
   $var wire  1 0! sim_shell_host_req_opcode $end
   $var wire  1 /! sim_shell_host_req_valid $end
   $var wire 32 2! sim_shell_host_req_value [31:0] $end
   $var wire 32 % sim_shell_host_resp_bits [31:0] $end
   $var wire  1 $ sim_shell_host_resp_valid $end
   $var wire 64 4! sim_shell_mem_rd_bits [63:0] $end
   $var wire  1 - sim_shell_mem_rd_ready $end
   $var wire  1 3! sim_shell_mem_rd_valid $end
   $var wire 64 ( sim_shell_mem_req_addr [63:0] $end
   $var wire  1 ' sim_shell_mem_req_opcode $end
   $var wire  1 & sim_shell_mem_req_valid $end
   $var wire 64 + sim_shell_mem_wr_bits [63:0] $end
   $var wire  1 * sim_shell_mem_wr_valid $end
   $var wire  1 8! sim_shell_reset $end
   $var wire  1 9! sim_shell_sim_clock $end
   $var wire  1 6! sim_shell_sim_wait $end
   $var wire  1 :! sim_wait $end
   $var wire  1 7! vta_accel_clock $end
   $var wire  8 1! vta_accel_io_host_req_addr [7:0] $end
   $var wire  1 # vta_accel_io_host_req_deq $end
   $var wire  1 0! vta_accel_io_host_req_opcode $end
   $var wire  1 /! vta_accel_io_host_req_valid $end
   $var wire 32 2! vta_accel_io_host_req_value [31:0] $end
   $var wire 32 % vta_accel_io_host_resp_bits [31:0] $end
   $var wire  1 $ vta_accel_io_host_resp_valid $end
   $var wire 64 4! vta_accel_io_mem_rd_bits [63:0] $end
   $var wire  1 - vta_accel_io_mem_rd_ready $end
   $var wire  1 3! vta_accel_io_mem_rd_valid $end
   $var wire 64 ( vta_accel_io_mem_req_addr [63:0] $end
   $var wire  1 ' vta_accel_io_mem_req_opcode $end
   $var wire  1 & vta_accel_io_mem_req_valid $end
   $var wire 64 + vta_accel_io_mem_wr_bits [63:0] $end
   $var wire  1 * vta_accel_io_mem_wr_valid $end
   $var wire  1 8! vta_accel_reset $end
   $scope module sim_shell $end
    $var wire  1 7! clock $end
    $var wire  8 1! host_req_addr [7:0] $end
    $var wire  1 # host_req_deq $end
    $var wire  1 0! host_req_opcode $end
    $var wire  1 /! host_req_valid $end
    $var wire 32 2! host_req_value [31:0] $end
    $var wire 32 % host_resp_bits [31:0] $end
    $var wire  1 $ host_resp_valid $end
    $var wire 64 4! mem_rd_bits [63:0] $end
    $var wire  1 - mem_rd_ready $end
    $var wire  1 3! mem_rd_valid $end
    $var wire 64 ( mem_req_addr [63:0] $end
    $var wire  1 ' mem_req_opcode $end
    $var wire  1 & mem_req_valid $end
    $var wire 64 + mem_wr_bits [63:0] $end
    $var wire  1 * mem_wr_valid $end
    $var wire  1 7! mod_host_clock $end
    $var wire  8 1! mod_host_dpi_req_addr [7:0] $end
    $var wire  1 # mod_host_dpi_req_deq $end
    $var wire  1 0! mod_host_dpi_req_opcode $end
    $var wire  1 /! mod_host_dpi_req_valid $end
    $var wire 32 2! mod_host_dpi_req_value [31:0] $end
    $var wire 32 % mod_host_dpi_resp_bits [31:0] $end
    $var wire  1 $ mod_host_dpi_resp_valid $end
    $var wire  1 8! mod_host_reset $end
    $var wire  1 7! mod_mem_clock $end
    $var wire 64 4! mod_mem_dpi_rd_bits [63:0] $end
    $var wire  1 - mod_mem_dpi_rd_ready $end
    $var wire  1 3! mod_mem_dpi_rd_valid $end
    $var wire 64 ( mod_mem_dpi_req_addr [63:0] $end
    $var wire  8 ;! mod_mem_dpi_req_len [7:0] $end
    $var wire  1 ' mod_mem_dpi_req_opcode $end
    $var wire  1 & mod_mem_dpi_req_valid $end
    $var wire 64 + mod_mem_dpi_wr_bits [63:0] $end
    $var wire  1 * mod_mem_dpi_wr_valid $end
    $var wire  1 8! mod_mem_reset $end
    $var wire  1 9! mod_sim_clock $end
    $var wire  1 6! mod_sim_dpi_wait $end
    $var wire  1 8! mod_sim_reset $end
    $var wire  1 8! reset $end
    $var wire  1 9! sim_clock $end
    $var wire  1 6! sim_wait $end
    $scope module mod_host $end
     $var wire 32 <! ADDR_BITS [31:0] $end
     $var wire 32 =! DATA_BITS [31:0] $end
     $var wire  1 7! clock $end
     $var wire  8 1! dpi_req_addr [7:0] $end
     $var wire  1 # dpi_req_deq $end
     $var wire  1 0! dpi_req_opcode $end
     $var wire  1 /! dpi_req_valid $end
     $var wire 32 2! dpi_req_value [31:0] $end
     $var wire 32 % dpi_resp_bits [31:0] $end
     $var wire  1 $ dpi_resp_valid $end
     $var wire  1 8! reset $end
    $upscope $end
    $scope module mod_mem $end
     $var wire 32 >! ADDR_BITS [31:0] $end
     $var wire 32 >! DATA_BITS [31:0] $end
     $var wire 32 <! LEN_BITS [31:0] $end
     $var wire  1 7! clock $end
     $var wire 64 4! dpi_rd_bits [63:0] $end
     $var wire  1 - dpi_rd_ready $end
     $var wire  1 3! dpi_rd_valid $end
     $var wire 64 ( dpi_req_addr [63:0] $end
     $var wire  8 ;! dpi_req_len [7:0] $end
     $var wire  1 ' dpi_req_opcode $end
     $var wire  1 & dpi_req_valid $end
     $var wire 64 + dpi_wr_bits [63:0] $end
     $var wire  1 * dpi_wr_valid $end
     $var wire  1 8! reset $end
    $upscope $end
    $scope module mod_sim $end
     $var wire  1 9! clock $end
     $var wire  1 6! dpi_wait $end
     $var wire  1 8! reset $end
     $var wire  1 6! wait_reg $end
    $upscope $end
   $upscope $end
   $scope module vta_accel $end
    $var wire  1 7! ce_clock $end
    $var wire 32 0 ce_io_ecnt_0_bits [31:0] $end
    $var wire  1 / ce_io_ecnt_0_valid $end
    $var wire  1 * ce_io_finish $end
    $var wire  1 . ce_io_launch $end
    $var wire 64 4! ce_io_mem_rd_bits [63:0] $end
    $var wire  1 - ce_io_mem_rd_ready $end
    $var wire  1 3! ce_io_mem_rd_valid $end
    $var wire 64 ( ce_io_mem_req_addr [63:0] $end
    $var wire  1 ' ce_io_mem_req_opcode $end
    $var wire  1 & ce_io_mem_req_valid $end
    $var wire 64 + ce_io_mem_wr_bits [63:0] $end
    $var wire  1 * ce_io_mem_wr_valid $end
    $var wire 64 4 ce_io_ptrs_0 [63:0] $end
    $var wire 64 6 ce_io_ptrs_1 [63:0] $end
    $var wire 64 8 ce_io_ptrs_2 [63:0] $end
    $var wire 32 1 ce_io_vals_0 [31:0] $end
    $var wire 32 2 ce_io_vals_1 [31:0] $end
    $var wire 32 3 ce_io_vals_2 [31:0] $end
    $var wire  1 8! ce_reset $end
    $var wire  1 7! clock $end
    $var wire  8 1! io_host_req_addr [7:0] $end
    $var wire  1 # io_host_req_deq $end
    $var wire  1 0! io_host_req_opcode $end
    $var wire  1 /! io_host_req_valid $end
    $var wire 32 2! io_host_req_value [31:0] $end
    $var wire 32 % io_host_resp_bits [31:0] $end
    $var wire  1 $ io_host_resp_valid $end
    $var wire 64 4! io_mem_rd_bits [63:0] $end
    $var wire  1 - io_mem_rd_ready $end
    $var wire  1 3! io_mem_rd_valid $end
    $var wire 64 ( io_mem_req_addr [63:0] $end
    $var wire  1 ' io_mem_req_opcode $end
    $var wire  1 & io_mem_req_valid $end
    $var wire 64 + io_mem_wr_bits [63:0] $end
    $var wire  1 * io_mem_wr_valid $end
    $var wire  1 8! reset $end
    $var wire  1 7! rf_clock $end
    $var wire 32 0 rf_io_ecnt_0_bits [31:0] $end
    $var wire  1 / rf_io_ecnt_0_valid $end
    $var wire  1 * rf_io_finish $end
    $var wire  8 1! rf_io_host_req_addr [7:0] $end
    $var wire  1 # rf_io_host_req_deq $end
    $var wire  1 0! rf_io_host_req_opcode $end
    $var wire  1 /! rf_io_host_req_valid $end
    $var wire 32 2! rf_io_host_req_value [31:0] $end
    $var wire 32 % rf_io_host_resp_bits [31:0] $end
    $var wire  1 $ rf_io_host_resp_valid $end
    $var wire  1 . rf_io_launch $end
    $var wire 64 4 rf_io_ptrs_0 [63:0] $end
    $var wire 64 6 rf_io_ptrs_1 [63:0] $end
    $var wire 64 8 rf_io_ptrs_2 [63:0] $end
    $var wire 32 1 rf_io_vals_0 [31:0] $end
    $var wire 32 2 rf_io_vals_1 [31:0] $end
    $var wire 32 3 rf_io_vals_2 [31:0] $end
    $var wire  1 8! rf_reset $end
    $scope module ce $end
     $var wire  1 7! clock $end
     $var wire 32 l cnt [31:0] $end
     $var wire 32 0 cycles [31:0] $end
     $var wire  1 7! dot_clock $end
     $var wire  8 D dot_io_arrA_0 [7:0] $end
     $var wire  8 E dot_io_arrA_1 [7:0] $end
     $var wire  8 F dot_io_arrA_2 [7:0] $end
     $var wire  8 G dot_io_arrA_3 [7:0] $end
     $var wire  8 H dot_io_arrA_4 [7:0] $end
     $var wire  8 I dot_io_arrA_5 [7:0] $end
     $var wire  8 J dot_io_arrA_6 [7:0] $end
     $var wire  8 K dot_io_arrA_7 [7:0] $end
     $var wire  8 L dot_io_arrB_0 [7:0] $end
     $var wire  8 M dot_io_arrB_1 [7:0] $end
     $var wire  8 N dot_io_arrB_2 [7:0] $end
     $var wire  8 O dot_io_arrB_3 [7:0] $end
     $var wire  8 P dot_io_arrB_4 [7:0] $end
     $var wire  8 Q dot_io_arrB_5 [7:0] $end
     $var wire  8 R dot_io_arrB_6 [7:0] $end
     $var wire  8 S dot_io_arrB_7 [7:0] $end
     $var wire 23 U dot_io_res [22:0] $end
     $var wire  1 C dot_io_start $end
     $var wire  1 T dot_io_valid $end
     $var wire  1 8! dot_reset $end
     $var wire 32 @! initvar [31:0] $end
     $var wire 32 0 io_ecnt_0_bits [31:0] $end
     $var wire  1 / io_ecnt_0_valid $end
     $var wire  1 * io_finish $end
     $var wire  1 . io_launch $end
     $var wire 64 4! io_mem_rd_bits [63:0] $end
     $var wire  1 - io_mem_rd_ready $end
     $var wire  1 3! io_mem_rd_valid $end
     $var wire 64 ( io_mem_req_addr [63:0] $end
     $var wire  1 ' io_mem_req_opcode $end
     $var wire  1 & io_mem_req_valid $end
     $var wire 64 + io_mem_wr_bits [63:0] $end
     $var wire  1 * io_mem_wr_valid $end
     $var wire 64 4 io_ptrs_0 [63:0] $end
     $var wire 64 6 io_ptrs_1 [63:0] $end
     $var wire 64 8 io_ptrs_2 [63:0] $end
     $var wire 32 1 io_vals_0 [31:0] $end
     $var wire 32 2 io_vals_1 [31:0] $end
     $var wire 32 3 io_vals_2 [31:0] $end
     $var wire  1 7! overallAccum_clock $end
     $var wire 63 X overallAccum_io_in [62:0] $end
     $var wire  1 * overallAccum_io_ready $end
     $var wire  1 V overallAccum_io_rst $end
     $var wire 64 + overallAccum_io_sum [63:0] $end
     $var wire  1 W overallAccum_io_valid $end
     $var wire  1 8! overallAccum_reset $end
     $var wire 64 m raddr1 [63:0] $end
     $var wire 64 o raddr2 [63:0] $end
     $var wire 32 \ reg1_0 [31:0] $end
     $var wire 32 ] reg1_1 [31:0] $end
     $var wire 32 ^ reg1_2 [31:0] $end
     $var wire 32 _ reg1_3 [31:0] $end
     $var wire 32 ` reg1_4 [31:0] $end
     $var wire 32 a reg1_5 [31:0] $end
     $var wire 32 b reg1_6 [31:0] $end
     $var wire 32 c reg1_7 [31:0] $end
     $var wire 32 d reg2_0 [31:0] $end
     $var wire 32 e reg2_1 [31:0] $end
     $var wire 32 f reg2_2 [31:0] $end
     $var wire 32 g reg2_3 [31:0] $end
     $var wire 32 h reg2_4 [31:0] $end
     $var wire 32 i reg2_5 [31:0] $end
     $var wire 32 j reg2_6 [31:0] $end
     $var wire 32 k reg2_7 [31:0] $end
     $var wire  1 8! reset $end
     $var wire  8 [ shift [7:0] $end
     $var wire 278 s shiftReg [277:0] $end
     $var wire  3 Z state [2:0] $end
     $var wire  1 W validReg $end
     $var wire 64 q waddr [63:0] $end
     $scope module dot $end
      $var wire 23 '! accum_0 [22:0] $end
      $var wire 23 (! accum_1 [22:0] $end
      $var wire 23 )! accum_2 [22:0] $end
      $var wire 23 *! accum_3 [22:0] $end
      $var wire 23 +! accum_4 [22:0] $end
      $var wire 23 ,! accum_5 [22:0] $end
      $var wire 23 -! accum_6 [22:0] $end
      $var wire 23 U accum_7 [22:0] $end
      $var wire  1 7! clock $end
      $var wire  3 .! cnt [2:0] $end
      $var wire 32 A! initvar [31:0] $end
      $var wire  8 D io_arrA_0 [7:0] $end
      $var wire  8 E io_arrA_1 [7:0] $end
      $var wire  8 F io_arrA_2 [7:0] $end
      $var wire  8 G io_arrA_3 [7:0] $end
      $var wire  8 H io_arrA_4 [7:0] $end
      $var wire  8 I io_arrA_5 [7:0] $end
      $var wire  8 J io_arrA_6 [7:0] $end
      $var wire  8 K io_arrA_7 [7:0] $end
      $var wire  8 L io_arrB_0 [7:0] $end
      $var wire  8 M io_arrB_1 [7:0] $end
      $var wire  8 N io_arrB_2 [7:0] $end
      $var wire  8 O io_arrB_3 [7:0] $end
      $var wire  8 P io_arrB_4 [7:0] $end
      $var wire  8 Q io_arrB_5 [7:0] $end
      $var wire  8 R io_arrB_6 [7:0] $end
      $var wire  8 S io_arrB_7 [7:0] $end
      $var wire 23 U io_res [22:0] $end
      $var wire  1 C io_start $end
      $var wire  1 T io_valid $end
      $var wire 16 } product_0 [15:0] $end
      $var wire 16 ~ product_1 [15:0] $end
      $var wire 16 !! product_2 [15:0] $end
      $var wire 16 "! product_3 [15:0] $end
      $var wire 16 #! product_4 [15:0] $end
      $var wire 16 $! product_5 [15:0] $end
      $var wire 16 %! product_6 [15:0] $end
      $var wire 16 &! product_7 [15:0] $end
      $var wire  1 8! reset $end
      $var wire  2 | state [1:0] $end
     $upscope $end
     $scope module overallAccum $end
      $var wire  1 7! clock $end
      $var wire 32 B! initvar [31:0] $end
      $var wire 63 X io_in [62:0] $end
      $var wire  1 * io_ready $end
      $var wire  1 V io_rst $end
      $var wire 64 + io_sum [63:0] $end
      $var wire  1 W io_valid $end
      $var wire  1 * ready $end
      $var wire 64 + reg$ [63:0] $end
      $var wire  1 8! reset $end
     $upscope $end
    $upscope $end
    $scope module rf $end
     $var wire  1 7! clock $end
     $var wire 32 ?! initvar [31:0] $end
     $var wire 32 0 io_ecnt_0_bits [31:0] $end
     $var wire  1 / io_ecnt_0_valid $end
     $var wire  1 * io_finish $end
     $var wire  8 1! io_host_req_addr [7:0] $end
     $var wire  1 # io_host_req_deq $end
     $var wire  1 0! io_host_req_opcode $end
     $var wire  1 /! io_host_req_valid $end
     $var wire 32 2! io_host_req_value [31:0] $end
     $var wire 32 % io_host_resp_bits [31:0] $end
     $var wire  1 $ io_host_resp_valid $end
     $var wire  1 . io_launch $end
     $var wire 64 4 io_ptrs_0 [63:0] $end
     $var wire 64 6 io_ptrs_1 [63:0] $end
     $var wire 64 8 io_ptrs_2 [63:0] $end
     $var wire 32 1 io_vals_0 [31:0] $end
     $var wire 32 2 io_vals_1 [31:0] $end
     $var wire 32 3 io_vals_2 [31:0] $end
     $var wire 32 % rdata [31:0] $end
     $var wire 32 : reg_0 [31:0] $end
     $var wire 32 ; reg_1 [31:0] $end
     $var wire 32 A reg_10 [31:0] $end
     $var wire 32 B reg_11 [31:0] $end
     $var wire 32 1 reg_2 [31:0] $end
     $var wire 32 2 reg_3 [31:0] $end
     $var wire 32 3 reg_4 [31:0] $end
     $var wire 32 < reg_5 [31:0] $end
     $var wire 32 = reg_6 [31:0] $end
     $var wire 32 > reg_7 [31:0] $end
     $var wire 32 ? reg_8 [31:0] $end
     $var wire 32 @ reg_9 [31:0] $end
     $var wire  1 8! reset $end
     $var wire  1 $ state $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00000011001110101111000011000001 %
0&
0'
b1100010111000101110000101100001101000001010001010101100001111101 (
1*
b1011011110010101001011011100011101111100001000111111111011110011 +
0-
1.
0/
b10011110111100000111011111001111 0
b10010011011011111110001101110010 1
b11111111010001100110011001100010 2
b10000100101000110000000010001110 3
b0000011110110010001011100100100100110010001111000000000100110100 4
b0111111001101000011110101010110011000001110011010010110101011101 6
b1110100000111011100100011100000001100000101000000111101110011100 8
b11111111100001100111011011010111 :
b10101111110110001101100011100011 ;
b01101101101100111000100101001110 <
b00110010001111000000000100110100 =
b00000111101100100010111001001001 >
b11000001110011010010110101011101 ?
b01111110011010000111101010101100 @
b01100000101000000111101110011100 A
b11101000001110111001000111000000 B
0C
b10101000 D
b01101010 E
b01001001 F
b00001011 G
b10111100 H
b10011000 I
b10101110 J
b00100010 K
b11011111 L
b10000001 M
b11010100 N
b00001010 O
b11100111 P
b10011101 Q
b01111011 R
b11111001 S
1T
b00001000001101000101101 U
0V
1W
b110011110101000101111011111000101101010110011110111010011110101 X
b111 Z
b01110010 [
b11110010111010011100010010101000 \
b10100110010110011010001001101010 ]
b01100110000111101000111001001001 ^
b11101001011110000111111100001011 _
b10010001111110111000001010111100 `
b10111011000110001100000010011000 a
b00110101011110110011100110101110 b
b10100001111000001110100000100010 c
b11001101110000011010110011011111 d
b01000000110101101010000010000001 e
b10111100000000010111001111010100 f
b00011101111000101101010100001010 g
b11011111010101110100000011100111 h
b01101010111110111011100010011101 i
b00110000011100001001000001111011 j
b01101111001011001110101011111001 k
b10110111000010100110110111001000 l
b1000010001010011100010111110110111111111100111100111011100010001 m
b0111011100011111100011110010100111111001000000111011001010100100 o
b1100010111000101110000101100001101000001010001010101100001111101 q
b11000001100110100111100001100011010100000111010110100110110110001000111110101011100000010110000010111000000111100100000111010110110000010100101000000101010100101110111111101100011101011001011000100110101010001110111110011110101000101111011111000101101010110011110111010011110101 s
b10 |
b0011111000000010 }
b1110110101101110 ~
b0111010110101001 !!
b0000001100010101 "!
b0010010001010111 #!
b1001010100000110 $!
b0111101001111110 %!
b0100101110100100 &!
b00000010101001111001000 '!
b01010101011101100100101 (!
b01000110110011100010101 )!
b10111111111101110111101 *!
b01110101001111111111010 +!
b10111001010111010110111 ,!
b00001011010000000100101 -!
b011 .!
0/!
00!
b00000000 1!
b00000000000000000000000000000000 2!
03!
b0000000000000000000000000000000000000000000000000000000000000000 4!
06!
07!
18!
09!
0:!
b00000000 ;!
b00000000000000000000000000001000 <!
b00000000000000000000000000100000 =!
b00000000000000000000000001000000 >!
b00000000000000000000000000000000 ?!
b00000000000000000000000000000000 @!
b00000000000000000000000000000000 A!
b00000000000000000000000000000000 B!
#1
b00000000000000000000000000000000 %
b0000000000000000000000000000000000000000000000000000000000000000 +
0.
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b0000000000000000000000000000000000000000000000000000000000000000 4
b0000000000000000000000000000000000000000000000000000000000000000 6
b0000000000000000000000000000000000000000000000000000000000000000 8
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
0T
b00000000000000000000000 U
b000000000000000000000000000000000000000000000000000000000000000 X
b000 Z
b00000000 [
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000001101000101101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 s
b00 |
b0000000000000000 }
b0000000000000000 ~
b0000000000000000 !!
b0000000000000000 "!
b0000000000000000 #!
b0000000000000000 $!
b0000000000000000 %!
b0000000000000000 &!
b00000000000000000000000 '!
b00000000000000000000000 (!
b00000000000000000000000 )!
b00000000000000000000000 *!
b00000000000000000000000 +!
b00000000000000000000000 ,!
b00000000000000000000000 -!
b000 .!
17!
#2
07!
#3
b0000000000000000000000000000000000000000000000000000000000000000 (
0W
b00000000000000000000000000000000 l
b0000000000000000000000000000000000000000000000000000000000000000 m
b0000000000000000000000000000000000000000000000000000000000000000 o
b0000000000000000000000000000000000000000000000000000000000000000 q
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 s
17!
#4
07!
#5
0*
17!
#6
07!
#7
17!
#8
07!
#9
17!
#10
07!
#11
17!
#12
07!
#13
17!
#14
07!
#15
17!
#16
07!
#17
17!
#18
07!
#19
17!
#20
07!
08!
#21
16!
17!
19!
1:!
#22
06!
07!
09!
0:!
#23
1#
1/!
10!
b00001000 1!
b1101111010101101101111101110111111011110101011011011111011101111 4!
17!
19!
#24
07!
09!
#25
17!
19!
#26
07!
09!
#27
b00001100 1!
b00000000000000000000000000000001 2!
17!
19!
#28
07!
09!
#29
b00000000000000000000000000000001 2
b00011000 1!
b00111000100101000000101000000000 2!
17!
19!
#30
07!
09!
#31
b0000000000000000000000000000000000111000100101000000101000000000 4
b00111000100101000000101000000000 =
b00011100 1!
b00000000000000000111111111101101 2!
17!
19!
#32
07!
09!
#33
b0000000000000000011111111110110100111000100101000000101000000000 4
b00000000000000000111111111101101 >
b0000000000000000000000000000000000111000100101000000101000000000 m
b00100000 1!
b00110110010100001010101100000000 2!
17!
19!
#34
07!
09!
#35
b0000000000000000000000000000000000110110010100001010101100000000 6
b00110110010100001010101100000000 ?
b0000000000000000011111111110110100111000100101000000101000000000 m
b00100100 1!
b00000000000000000111111111101101 2!
17!
19!
#36
07!
09!
#37
b0000000000000000011111111110110100110110010100001010101100000000 6
b00000000000000000111111111101101 @
b0000000000000000000000000000000000110110010100001010101100000000 o
b00101000 1!
b00111000100101000000101010000000 2!
17!
19!
#38
07!
09!
#39
b0000000000000000000000000000000000111000100101000000101010000000 8
b00111000100101000000101010000000 A
b0000000000000000011111111110110100110110010100001010101100000000 o
b00101100 1!
b00000000000000000111111111101101 2!
17!
19!
#40
07!
09!
#41
b0000000000000000000000000000000000111000100101000000101010000000 (
b0000000000000000011111111110110100111000100101000000101010000000 8
b00000000000000000111111111101101 B
b0000000000000000000000000000000000111000100101000000101010000000 q
b00000000 1!
b00000000000000000000000000000001 2!
17!
19!
#42
07!
09!
#43
b0000000000000000011111111110110100111000100101000000101010000000 (
1.
b00000000000000000000000000000001 :
b0000000000000000011111111110110100111000100101000000101010000000 q
b00000000000000000000000000000000 2!
17!
19!
#44
07!
09!
#45
1&
b0000000000000000011111111110110100111000100101000000101000000000 (
0.
b00000000000000000000000000000000 :
b001 Z
b00010000 1!
b00000000000000000000000000000001 2!
17!
19!
#46
07!
09!
#47
0&
b0000000000000000011111111110110100111000100101000000101010000000 (
1-
b00000000000000000000000000000001 0
b00000000000000000000000000000001 3
1V
b010 Z
b00000000000000000000000000000000 2!
17!
19!
#48
07!
09!
#49
b00000000000000000000000000000010 0
b00000000000000000000000000000000 3
0V
b00010100 1!
b00000000000000000000000000000001 2!
13!
b0000100000000111000001100000010100000100000000110000001000000001 4!
17!
19!
#50
07!
09!
#51
1&
b0000000000000000011111111110110100110110010100001010101100000000 (
0-
b00000000000000000000000000000011 0
b00000000000000000000000000000001 <
b00000001 D
b00000010 E
b00000011 F
b00000100 G
b00000101 H
b00000110 I
b00000111 J
b00001000 K
b011 Z
b00000000000000000000000000000001 \
b00000000000000000000000000000010 ]
b00000000000000000000000000000011 ^
b00000000000000000000000000000100 _
b00000000000000000000000000000101 `
b00000000000000000000000000000110 a
b00000000000000000000000000000111 b
b00000000000000000000000000001000 c
b00000000000000000000000000000000 2!
03!
b1101111010101101101111101110111111011110101011011011111011101111 4!
17!
19!
#52
07!
09!
#53
0&
b0000000000000000011111111110110100111000100101000000101010000000 (
1-
b00000000000000000000000000000100 0
b00000000000000000000000000000000 <
b100 Z
00!
b00000000 1!
17!
19!
#54
07!
09!
#55
0#
1$
b00000000000000000000000000000101 0
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
13!
b0000011100000101000000110000000100000111000001010000001100000001 4!
17!
19!
#56
07!
09!
#57
0$
1&
1'
0-
b00000000000000000000000000000110 0
b00000001 L
b00000011 M
b00000101 N
b00000111 O
b00000001 P
b00000011 Q
b00000101 R
b00000111 S
b101 Z
b00000000000000000000000000000001 d
b00000000000000000000000000000011 e
b00000000000000000000000000000101 f
b00000000000000000000000000000111 g
b00000000000000000000000000000001 h
b00000000000000000000000000000011 i
b00000000000000000000000000000101 j
b00000000000000000000000000000111 k
03!
b1101111010101101101111101110111111011110101011011011111011101111 4!
17!
19!
#58
07!
09!
#59
0&
0'
1/
b00000000000000000000000000000111 0
1C
b110 Z
17!
19!
#60
07!
09!
#61
0/
b00000000000000000000000000001000 0
b00000000000000000000000000000111 ;
0C
b000 Z
b00000000000000000000000000000001 l
b0000000000000000011111111110110100111000100101000000101000001000 m
b0000000000000000011111111110110100110110010100001010101100001000 o
b01 |
17!
19!
#62
07!
09!
#63
1#
b00000000000000000000000000000000 0
b00000000000000000000000000000000 l
b0000000000000000011111111110110100111000100101000000101000000000 m
b0000000000000000011111111110110100110110010100001010101100000000 o
b0000000000000001 }
b0000000000000110 ~
b0000000000001111 !!
b0000000000011100 "!
b0000000000000101 #!
b0000000000010010 $!
b0000000000100011 %!
b0000000000111000 &!
b001 .!
1/!
00!
b00000000 1!
b00000000000000000000000000000000 2!
17!
19!
#64
07!
09!
#65
0#
1$
b00000000000000000111000 U
b00000000000000000000001 '!
b00000000000000000000110 (!
b00000000000000000001111 )!
b00000000000000000011100 *!
b00000000000000000000101 +!
b00000000000000000010010 ,!
b00000000000000000100011 -!
b010 .!
17!
19!
#66
07!
09!
#67
0$
b00000000000000001011011 U
b000000000000000000000000000000000000000000000000000000000111000 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000111000 s
b00000000000000000000111 (!
b00000000000000000010101 )!
b00000000000000000101011 *!
b00000000000000000100001 +!
b00000000000000000010111 ,!
b00000000000000000110101 -!
b011 .!
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
17!
19!
#68
07!
09!
#69
b00000000000000001101101 U
b000000000000000000000000000000000000000000000000000000001011011 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001011011 s
b00000000000000000010110 )!
b00000000000000000110001 *!
b00000000000000000110000 +!
b00000000000000000110011 ,!
b00000000000000000111010 -!
b100 .!
17!
19!
#70
07!
09!
#71
1#
b00000000000000001110010 U
b000000000000000000000000000000000000000000000000000000001101101 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001101101 s
b00000000000000000110010 *!
b00000000000000000110110 +!
b00000000000000001000010 ,!
b00000000000000001010110 -!
b101 .!
1/!
00!
b00000000 1!
b00000000000000000000000000000000 2!
17!
19!
#72
07!
09!
#73
0#
1$
b00000000000000010001110 U
b000000000000000000000000000000000000000000000000000000001110010 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001110010 s
b00000000000000000110111 +!
b00000000000000001001000 ,!
b00000000000000001100101 -!
b110 .!
17!
19!
#74
07!
09!
#75
0$
b00000000000000010011101 U
b000000000000000000000000000000000000000000000000000000010001110 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010001110 s
b00000000000000001001001 ,!
b00000000000000001101011 -!
b111 .!
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
17!
19!
#76
07!
09!
#77
1#
1T
b00000000000000010100011 U
b000000000000000000000000000000000000000000000000000000010011101 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010011101 s
b10 |
b00000000000000001101100 -!
b000 .!
1/!
00!
b00000000 1!
b00000000000000000000000000000000 2!
17!
19!
#78
07!
09!
#79
0#
1$
0T
1W
b000000000000000000000000000000000000000000000000000000010100011 X
b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100011 s
b00 |
17!
19!
#80
07!
09!
#81
0$
1*
b0000000000000000000000000000000000000000000000000000000010100011 +
0W
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
17!
19!
#82
07!
09!
#83
0*
b00000000000000000000000000000010 :
17!
19!
#84
07!
09!
#85
17!
19!
#86
07!
09!
#87
17!
19!
#88
07!
09!
#89
17!
19!
#90
07!
09!
#91
17!
19!
#92
07!
09!
#93
17!
19!
#94
07!
09!
#95
17!
19!
#96
07!
09!
#97
17!
19!
#98
07!
09!
#99
17!
19!
#100
07!
09!
#101
17!
19!
#102
07!
09!
#103
17!
19!
#104
07!
09!
#105
17!
19!
#106
07!
09!
#107
17!
19!
#108
07!
09!
#109
17!
19!
#110
07!
09!
#111
17!
19!
#112
07!
09!
#113
17!
19!
#114
07!
09!
#115
17!
19!
#116
07!
09!
#117
17!
19!
#118
07!
09!
#119
17!
19!
#120
07!
09!
#121
17!
19!
#122
07!
09!
#123
17!
19!
#124
07!
09!
#125
17!
19!
#126
07!
09!
#127
17!
19!
#128
07!
09!
#129
17!
19!
#130
07!
09!
#131
17!
19!
#132
07!
09!
#133
17!
19!
#134
07!
09!
#135
17!
19!
#136
07!
09!
#137
17!
19!
#138
07!
09!
#139
17!
19!
#140
07!
09!
#141
17!
19!
#142
07!
09!
#143
17!
19!
#144
07!
09!
#145
17!
19!
#146
07!
09!
#147
17!
19!
#148
07!
09!
#149
17!
19!
#150
07!
09!
#151
17!
19!
#152
07!
09!
#153
17!
19!
#154
07!
09!
#155
17!
19!
#156
07!
09!
#157
17!
19!
#158
07!
09!
#159
17!
19!
#160
07!
09!
#161
17!
19!
#162
07!
09!
#163
17!
19!
#164
07!
09!
#165
17!
19!
#166
07!
09!
#167
17!
19!
#168
07!
09!
#169
1#
1/!
00!
b00000000 1!
b00000000000000000000000000000000 2!
17!
19!
#170
07!
09!
#171
0#
1$
b00000000000000000000000000000010 %
17!
19!
#172
07!
09!
#173
0$
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
17!
19!
#174
07!
09!
#175
17!
19!
#176
07!
09!
#177
17!
19!
#178
07!
09!
#179
17!
19!
#180
07!
09!
#181
17!
19!
#182
07!
09!
#183
17!
19!
#184
07!
09!
#185
17!
19!
#186
07!
09!
#187
17!
19!
#188
07!
09!
#189
17!
19!
#190
07!
09!
#191
17!
19!
#192
07!
09!
#193
17!
19!
#194
07!
09!
#195
17!
19!
#196
07!
09!
#197
17!
19!
#198
07!
09!
#199
17!
19!
#200
07!
09!
#201
17!
19!
#202
07!
09!
#203
17!
19!
#204
07!
09!
#205
17!
19!
#206
07!
09!
#207
17!
19!
#208
07!
09!
#209
17!
19!
#210
07!
09!
#211
17!
19!
#212
07!
09!
#213
17!
19!
#214
07!
09!
#215
17!
19!
#216
07!
09!
#217
17!
19!
#218
07!
09!
#219
17!
19!
#220
07!
09!
#221
17!
19!
#222
07!
09!
#223
17!
19!
#224
07!
09!
#225
17!
19!
#226
07!
09!
#227
17!
19!
#228
07!
09!
#229
17!
19!
#230
07!
09!
#231
17!
19!
#232
07!
09!
#233
17!
19!
#234
07!
09!
#235
17!
19!
#236
07!
09!
#237
17!
19!
#238
07!
09!
#239
17!
19!
#240
07!
09!
#241
17!
19!
#242
07!
09!
#243
17!
19!
#244
07!
09!
#245
17!
19!
#246
07!
09!
#247
17!
19!
#248
07!
09!
#249
1#
1/!
00!
b00000100 1!
b00000000000000000000000000000000 2!
17!
19!
#250
07!
09!
#251
0#
1$
b00000000000000000000000000000111 %
17!
19!
#252
07!
09!
#253
0$
0/!
10!
b10101101 1!
b00000000000000000000101110101101 2!
17!
19!
#254
07!
09!
#255
17!
19!
#256
07!
09!
#257
17!
19!
#258
07!
09!
#259
17!
19!
#260
07!
09!
#261
17!
19!
#262
07!
09!
#263
16!
17!
19!
1:!
#264
06!
07!
09!
0:!
#265
17!
19!
