$version Generated by VerilatedVcd $end
$date Fri Jul 12 12:41:51 2019
 $end
$timescale   1ns $end

 $scope module TOP $end
  $var wire  1 c clock $end
  $var wire  1 d reset $end
  $var wire  1 e sim_clock $end
  $var wire  1 f sim_wait $end
  $scope module TestAccel $end
   $var wire  1 c clock $end
   $var wire  1 d reset $end
   $var wire  1 e sim_clock $end
   $var wire  1 c sim_shell_clock $end
   $var wire  8 ] sim_shell_host_req_addr [7:0] $end
   $var wire  1 # sim_shell_host_req_deq $end
   $var wire  1 \ sim_shell_host_req_opcode $end
   $var wire  1 [ sim_shell_host_req_valid $end
   $var wire 32 ^ sim_shell_host_req_value [31:0] $end
   $var wire 32 % sim_shell_host_resp_bits [31:0] $end
   $var wire  1 $ sim_shell_host_resp_valid $end
   $var wire 64 ` sim_shell_mem_rd_bits [63:0] $end
   $var wire  1 - sim_shell_mem_rd_ready $end
   $var wire  1 _ sim_shell_mem_rd_valid $end
   $var wire 64 ( sim_shell_mem_req_addr [63:0] $end
   $var wire  1 ' sim_shell_mem_req_opcode $end
   $var wire  1 & sim_shell_mem_req_valid $end
   $var wire 64 + sim_shell_mem_wr_bits [63:0] $end
   $var wire  1 * sim_shell_mem_wr_valid $end
   $var wire  1 d sim_shell_reset $end
   $var wire  1 e sim_shell_sim_clock $end
   $var wire  1 b sim_shell_sim_wait $end
   $var wire  1 f sim_wait $end
   $var wire  1 c vta_accel_clock $end
   $var wire  8 ] vta_accel_io_host_req_addr [7:0] $end
   $var wire  1 # vta_accel_io_host_req_deq $end
   $var wire  1 \ vta_accel_io_host_req_opcode $end
   $var wire  1 [ vta_accel_io_host_req_valid $end
   $var wire 32 ^ vta_accel_io_host_req_value [31:0] $end
   $var wire 32 % vta_accel_io_host_resp_bits [31:0] $end
   $var wire  1 $ vta_accel_io_host_resp_valid $end
   $var wire 64 ` vta_accel_io_mem_rd_bits [63:0] $end
   $var wire  1 - vta_accel_io_mem_rd_ready $end
   $var wire  1 _ vta_accel_io_mem_rd_valid $end
   $var wire 64 ( vta_accel_io_mem_req_addr [63:0] $end
   $var wire  1 ' vta_accel_io_mem_req_opcode $end
   $var wire  1 & vta_accel_io_mem_req_valid $end
   $var wire 64 + vta_accel_io_mem_wr_bits [63:0] $end
   $var wire  1 * vta_accel_io_mem_wr_valid $end
   $var wire  1 d vta_accel_reset $end
   $scope module sim_shell $end
    $var wire  1 c clock $end
    $var wire  8 ] host_req_addr [7:0] $end
    $var wire  1 # host_req_deq $end
    $var wire  1 \ host_req_opcode $end
    $var wire  1 [ host_req_valid $end
    $var wire 32 ^ host_req_value [31:0] $end
    $var wire 32 % host_resp_bits [31:0] $end
    $var wire  1 $ host_resp_valid $end
    $var wire 64 ` mem_rd_bits [63:0] $end
    $var wire  1 - mem_rd_ready $end
    $var wire  1 _ mem_rd_valid $end
    $var wire 64 ( mem_req_addr [63:0] $end
    $var wire  1 ' mem_req_opcode $end
    $var wire  1 & mem_req_valid $end
    $var wire 64 + mem_wr_bits [63:0] $end
    $var wire  1 * mem_wr_valid $end
    $var wire  1 c mod_host_clock $end
    $var wire  8 ] mod_host_dpi_req_addr [7:0] $end
    $var wire  1 # mod_host_dpi_req_deq $end
    $var wire  1 \ mod_host_dpi_req_opcode $end
    $var wire  1 [ mod_host_dpi_req_valid $end
    $var wire 32 ^ mod_host_dpi_req_value [31:0] $end
    $var wire 32 % mod_host_dpi_resp_bits [31:0] $end
    $var wire  1 $ mod_host_dpi_resp_valid $end
    $var wire  1 d mod_host_reset $end
    $var wire  1 c mod_mem_clock $end
    $var wire 64 ` mod_mem_dpi_rd_bits [63:0] $end
    $var wire  1 - mod_mem_dpi_rd_ready $end
    $var wire  1 _ mod_mem_dpi_rd_valid $end
    $var wire 64 ( mod_mem_dpi_req_addr [63:0] $end
    $var wire  8 g mod_mem_dpi_req_len [7:0] $end
    $var wire  1 ' mod_mem_dpi_req_opcode $end
    $var wire  1 & mod_mem_dpi_req_valid $end
    $var wire 64 + mod_mem_dpi_wr_bits [63:0] $end
    $var wire  1 * mod_mem_dpi_wr_valid $end
    $var wire  1 d mod_mem_reset $end
    $var wire  1 e mod_sim_clock $end
    $var wire  1 b mod_sim_dpi_wait $end
    $var wire  1 d mod_sim_reset $end
    $var wire  1 d reset $end
    $var wire  1 e sim_clock $end
    $var wire  1 b sim_wait $end
    $scope module mod_host $end
     $var wire 32 h ADDR_BITS [31:0] $end
     $var wire 32 i DATA_BITS [31:0] $end
     $var wire  1 c clock $end
     $var wire  8 ] dpi_req_addr [7:0] $end
     $var wire  1 # dpi_req_deq $end
     $var wire  1 \ dpi_req_opcode $end
     $var wire  1 [ dpi_req_valid $end
     $var wire 32 ^ dpi_req_value [31:0] $end
     $var wire 32 % dpi_resp_bits [31:0] $end
     $var wire  1 $ dpi_resp_valid $end
     $var wire  1 d reset $end
    $upscope $end
    $scope module mod_mem $end
     $var wire 32 j ADDR_BITS [31:0] $end
     $var wire 32 j DATA_BITS [31:0] $end
     $var wire 32 h LEN_BITS [31:0] $end
     $var wire  1 c clock $end
     $var wire 64 ` dpi_rd_bits [63:0] $end
     $var wire  1 - dpi_rd_ready $end
     $var wire  1 _ dpi_rd_valid $end
     $var wire 64 ( dpi_req_addr [63:0] $end
     $var wire  8 g dpi_req_len [7:0] $end
     $var wire  1 ' dpi_req_opcode $end
     $var wire  1 & dpi_req_valid $end
     $var wire 64 + dpi_wr_bits [63:0] $end
     $var wire  1 * dpi_wr_valid $end
     $var wire  1 d reset $end
    $upscope $end
    $scope module mod_sim $end
     $var wire  1 e clock $end
     $var wire  1 b dpi_wait $end
     $var wire  1 d reset $end
     $var wire  1 b wait_reg $end
    $upscope $end
   $upscope $end
   $scope module vta_accel $end
    $var wire  1 c ce_clock $end
    $var wire 32 1 ce_io_ecnt_0_bits [31:0] $end
    $var wire  1 0 ce_io_ecnt_0_valid $end
    $var wire  1 / ce_io_finish $end
    $var wire  1 . ce_io_launch $end
    $var wire 64 ` ce_io_mem_rd_bits [63:0] $end
    $var wire  1 - ce_io_mem_rd_ready $end
    $var wire  1 _ ce_io_mem_rd_valid $end
    $var wire 64 ( ce_io_mem_req_addr [63:0] $end
    $var wire  1 ' ce_io_mem_req_opcode $end
    $var wire  1 & ce_io_mem_req_valid $end
    $var wire 64 + ce_io_mem_wr_bits [63:0] $end
    $var wire  1 * ce_io_mem_wr_valid $end
    $var wire 64 6 ce_io_ptrs_0 [63:0] $end
    $var wire 64 8 ce_io_ptrs_1 [63:0] $end
    $var wire 64 : ce_io_ptrs_2 [63:0] $end
    $var wire 32 2 ce_io_vals_0 [31:0] $end
    $var wire 32 3 ce_io_vals_1 [31:0] $end
    $var wire 32 4 ce_io_vals_2 [31:0] $end
    $var wire 32 5 ce_io_vals_3 [31:0] $end
    $var wire  1 d ce_reset $end
    $var wire  1 c clock $end
    $var wire  8 ] io_host_req_addr [7:0] $end
    $var wire  1 # io_host_req_deq $end
    $var wire  1 \ io_host_req_opcode $end
    $var wire  1 [ io_host_req_valid $end
    $var wire 32 ^ io_host_req_value [31:0] $end
    $var wire 32 % io_host_resp_bits [31:0] $end
    $var wire  1 $ io_host_resp_valid $end
    $var wire 64 ` io_mem_rd_bits [63:0] $end
    $var wire  1 - io_mem_rd_ready $end
    $var wire  1 _ io_mem_rd_valid $end
    $var wire 64 ( io_mem_req_addr [63:0] $end
    $var wire  1 ' io_mem_req_opcode $end
    $var wire  1 & io_mem_req_valid $end
    $var wire 64 + io_mem_wr_bits [63:0] $end
    $var wire  1 * io_mem_wr_valid $end
    $var wire  1 d reset $end
    $var wire  1 c rf_clock $end
    $var wire 32 1 rf_io_ecnt_0_bits [31:0] $end
    $var wire  1 0 rf_io_ecnt_0_valid $end
    $var wire  1 / rf_io_finish $end
    $var wire  8 ] rf_io_host_req_addr [7:0] $end
    $var wire  1 # rf_io_host_req_deq $end
    $var wire  1 \ rf_io_host_req_opcode $end
    $var wire  1 [ rf_io_host_req_valid $end
    $var wire 32 ^ rf_io_host_req_value [31:0] $end
    $var wire 32 % rf_io_host_resp_bits [31:0] $end
    $var wire  1 $ rf_io_host_resp_valid $end
    $var wire  1 . rf_io_launch $end
    $var wire 64 6 rf_io_ptrs_0 [63:0] $end
    $var wire 64 8 rf_io_ptrs_1 [63:0] $end
    $var wire 64 : rf_io_ptrs_2 [63:0] $end
    $var wire 32 2 rf_io_vals_0 [31:0] $end
    $var wire 32 3 rf_io_vals_1 [31:0] $end
    $var wire 32 4 rf_io_vals_2 [31:0] $end
    $var wire 32 5 rf_io_vals_3 [31:0] $end
    $var wire  1 d rf_reset $end
    $scope module ce $end
     $var wire  1 c clock $end
     $var wire 32 T cnt [31:0] $end
     $var wire 32 1 cycles [31:0] $end
     $var wire 32 l initvar [31:0] $end
     $var wire 32 1 io_ecnt_0_bits [31:0] $end
     $var wire  1 0 io_ecnt_0_valid $end
     $var wire  1 / io_finish $end
     $var wire  1 . io_launch $end
     $var wire 64 ` io_mem_rd_bits [63:0] $end
     $var wire  1 - io_mem_rd_ready $end
     $var wire  1 _ io_mem_rd_valid $end
     $var wire 64 ( io_mem_req_addr [63:0] $end
     $var wire  1 ' io_mem_req_opcode $end
     $var wire  1 & io_mem_req_valid $end
     $var wire 64 + io_mem_wr_bits [63:0] $end
     $var wire  1 * io_mem_wr_valid $end
     $var wire 64 6 io_ptrs_0 [63:0] $end
     $var wire 64 8 io_ptrs_1 [63:0] $end
     $var wire 64 : io_ptrs_2 [63:0] $end
     $var wire 32 2 io_vals_0 [31:0] $end
     $var wire 32 3 io_vals_1 [31:0] $end
     $var wire 32 4 io_vals_2 [31:0] $end
     $var wire 32 5 io_vals_3 [31:0] $end
     $var wire  1 c overallAccum_clock $end
     $var wire 63 M overallAccum_io_in [62:0] $end
     $var wire  1 L overallAccum_io_ready $end
     $var wire  1 J overallAccum_io_rst $end
     $var wire 64 + overallAccum_io_sum [63:0] $end
     $var wire  1 K overallAccum_io_valid $end
     $var wire  1 d overallAccum_reset $end
     $var wire 64 U raddr1 [63:0] $end
     $var wire 64 W raddr2 [63:0] $end
     $var wire  1 / ready $end
     $var wire 64 P reg1 [63:0] $end
     $var wire 64 R reg2 [63:0] $end
     $var wire  1 d reset $end
     $var wire  1 c sliceAccum_clock $end
     $var wire 63 F sliceAccum_io_in [62:0] $end
     $var wire  1 E sliceAccum_io_ready $end
     $var wire  1 D sliceAccum_io_rst $end
     $var wire 64 H sliceAccum_io_sum [63:0] $end
     $var wire  1 ' sliceAccum_io_valid $end
     $var wire  1 d sliceAccum_reset $end
     $var wire  3 O state [2:0] $end
     $var wire 64 Y waddr [63:0] $end
     $scope module overallAccum $end
      $var wire  1 c clock $end
      $var wire 32 n initvar [31:0] $end
      $var wire 63 M io_in [62:0] $end
      $var wire  1 L io_ready $end
      $var wire  1 J io_rst $end
      $var wire 64 + io_sum [63:0] $end
      $var wire  1 K io_valid $end
      $var wire  1 L ready $end
      $var wire 64 + reg$ [63:0] $end
      $var wire  1 d reset $end
     $upscope $end
     $scope module sliceAccum $end
      $var wire  1 c clock $end
      $var wire 32 m initvar [31:0] $end
      $var wire 63 F io_in [62:0] $end
      $var wire  1 E io_ready $end
      $var wire  1 D io_rst $end
      $var wire 64 H io_sum [63:0] $end
      $var wire  1 ' io_valid $end
      $var wire  1 E ready $end
      $var wire 64 H reg$ [63:0] $end
      $var wire  1 d reset $end
     $upscope $end
    $upscope $end
    $scope module rf $end
     $var wire  1 c clock $end
     $var wire 32 k initvar [31:0] $end
     $var wire 32 1 io_ecnt_0_bits [31:0] $end
     $var wire  1 0 io_ecnt_0_valid $end
     $var wire  1 / io_finish $end
     $var wire  8 ] io_host_req_addr [7:0] $end
     $var wire  1 # io_host_req_deq $end
     $var wire  1 \ io_host_req_opcode $end
     $var wire  1 [ io_host_req_valid $end
     $var wire 32 ^ io_host_req_value [31:0] $end
     $var wire 32 % io_host_resp_bits [31:0] $end
     $var wire  1 $ io_host_resp_valid $end
     $var wire  1 . io_launch $end
     $var wire 64 6 io_ptrs_0 [63:0] $end
     $var wire 64 8 io_ptrs_1 [63:0] $end
     $var wire 64 : io_ptrs_2 [63:0] $end
     $var wire 32 2 io_vals_0 [31:0] $end
     $var wire 32 3 io_vals_1 [31:0] $end
     $var wire 32 4 io_vals_2 [31:0] $end
     $var wire 32 5 io_vals_3 [31:0] $end
     $var wire 32 % rdata [31:0] $end
     $var wire 32 < reg_0 [31:0] $end
     $var wire 32 = reg_1 [31:0] $end
     $var wire 32 B reg_10 [31:0] $end
     $var wire 32 C reg_11 [31:0] $end
     $var wire 32 2 reg_2 [31:0] $end
     $var wire 32 3 reg_3 [31:0] $end
     $var wire 32 4 reg_4 [31:0] $end
     $var wire 32 5 reg_5 [31:0] $end
     $var wire 32 > reg_6 [31:0] $end
     $var wire 32 ? reg_7 [31:0] $end
     $var wire 32 @ reg_8 [31:0] $end
     $var wire 32 A reg_9 [31:0] $end
     $var wire  1 d reset $end
     $var wire  1 $ state $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00110000011100001001000001111011 %
0&
0'
b1011011110010101001011011100011101111100001000111111111011110011 (
0*
b1110000110000111101000111011111110011110111100000111011111001111 +
1-
1.
1/
00
b11111111010001100110011001100010 1
b10010001111110111000001010111100 2
b10111011000110001100000010011000 3
b00110101011110110011100110101110 4
b10100001111000001110100000100010 5
b0100000011010110101000001000000111001101110000011010110011011111 6
b0001110111100010110101010000101010111100000000010111001111010100 8
b0110101011111011101110001001110111011111010101110100000011100111 :
b01100110000111101000111001001001 <
b11101001011110000111111100001011 =
b11001101110000011010110011011111 >
b01000000110101101010000010000001 ?
b10111100000000010111001111010100 @
b00011101111000101101010100001010 A
b11011111010101110100000011100111 B
b01101010111110111011100010011101 C
0D
1E
b100101011100110001000011100001000100101000110100010101100111110 F
b1111101111010100000111010100010011111111100001100111011011010111 H
0J
0K
0L
b000000000000000000000000000000000000000000000000000000000000000 M
b010 O
b1000010010100011000000001000111001101101101100111000100101001110 P
b0011001000111100000000010011010000000111101100100010111001001001 R
b11000001110011010010110101011101 T
b0111111001101000011110101010110001100000101000000111101110011100 U
b1110100000111011100100011100000000000011001110101111000011000001 W
b1011011110010101001011011100011101111100001000111111111011110011 Y
0[
0\
b00000000 ]
b00000000000000000000000000000000 ^
0_
b0000000000000000000000000000000000000000000000000000000000000000 `
0b
0c
1d
0e
0f
b00000000 g
b00000000000000000000000000001000 h
b00000000000000000000000000100000 i
b00000000000000000000000001000000 j
b00000000000000000000000000000000 k
b00000000000000000000000000000000 l
b00000000000000000000000000000000 m
b00000000000000000000000000000000 n
#1
b00000000000000000000000000000000 %
b0000000000000000000000000000000000000000000000000000000000000000 +
0-
0.
0/
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b0000000000000000000000000000000000000000000000000000000000000000 6
b0000000000000000000000000000000000000000000000000000000000000000 8
b0000000000000000000000000000000000000000000000000000000000000000 :
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
0E
b0000000000000000000000000000000000000000000000000000000000000000 H
b000 O
1c
#2
0c
#3
b0000000000000000000000000000000000000000000000000000000000000000 (
b00000000000000000000000000000000 T
b0000000000000000000000000000000000000000000000000000000000000000 U
b0000000000000000000000000000000000000000000000000000000000000000 W
b0000000000000000000000000000000000000000000000000000000000000000 Y
1c
#4
0c
#5
1c
#6
0c
#7
1c
#8
0c
#9
1c
#10
0c
#11
1c
#12
0c
#13
1c
#14
0c
#15
1c
#16
0c
#17
1c
#18
0c
#19
1c
#20
0c
0d
#21
1b
1c
1e
1f
#22
0b
0c
0e
0f
#23
1#
1[
1\
b00001000 ]
b1101111010101101101111101110111111011110101011011011111011101111 `
1c
1e
#24
0c
0e
#25
1c
1e
#26
0c
0e
#27
b00001100 ]
b00000000000000000000000000000010 ^
1c
1e
#28
0c
0e
#29
b00000000000000000000000000000010 3
b00011000 ]
b01110010000011100010110010000000 ^
1c
1e
#30
0c
0e
#31
b0000000000000000000000000000000001110010000011100010110010000000 6
b01110010000011100010110010000000 >
b00011100 ]
b00000000000000000111111110001010 ^
1c
1e
#32
0c
0e
#33
b0000000000000000011111111000101001110010000011100010110010000000 6
b00000000000000000111111110001010 ?
b0000000000000000000000000000000001110010000011100010110010000000 U
b00100000 ]
b01110010000011100010110100000000 ^
1c
1e
#34
0c
0e
#35
b0000000000000000000000000000000001110010000011100010110100000000 8
b01110010000011100010110100000000 @
b0000000000000000011111111000101001110010000011100010110010000000 U
b00100100 ]
b00000000000000000111111110001010 ^
1c
1e
#36
0c
0e
#37
b0000000000000000011111111000101001110010000011100010110100000000 8
b00000000000000000111111110001010 A
b0000000000000000000000000000000001110010000011100010110100000000 W
b00101000 ]
b01110010000011100010110110000000 ^
1c
1e
#38
0c
0e
#39
b0000000000000000000000000000000001110010000011100010110110000000 :
b01110010000011100010110110000000 B
b0000000000000000011111111000101001110010000011100010110100000000 W
b00101100 ]
b00000000000000000111111110001010 ^
1c
1e
#40
0c
0e
#41
b0000000000000000000000000000000001110010000011100010110110000000 (
b0000000000000000011111111000101001110010000011100010110110000000 :
b00000000000000000111111110001010 C
b0000000000000000000000000000000001110010000011100010110110000000 Y
b00000000 ]
b00000000000000000000000000000001 ^
1c
1e
#42
0c
0e
#43
b0000000000000000011111111000101001110010000011100010110110000000 (
1.
b00000000000000000000000000000001 <
b0000000000000000011111111000101001110010000011100010110110000000 Y
b00000000000000000000000000000000 ^
1c
1e
#44
0c
0e
#45
1&
b0000000000000000011111111000101001110010000011100010110010000000 (
0.
b00000000000000000000000000000000 <
b001 O
b00010000 ]
b00000000000000000000000000000001 ^
1c
1e
#46
0c
0e
#47
0&
b0000000000000000011111111000101001110010000011100010110110000000 (
1-
b00000000000000000000000000000001 1
b00000000000000000000000000000001 4
1J
b010 O
b00000000000000000000000000000000 ^
1c
1e
#48
0c
0e
#49
b00000000000000000000000000000010 1
b00000000000000000000000000000000 4
0J
b00010100 ]
b00000000000000000000000000000001 ^
1_
b0000000000000000000000000000000100000111011010110001000001010001 `
1c
1e
#50
0c
0e
#51
1&
b0000000000000000011111111000101001110010000011100010110100000000 (
0-
b00000000000000000000000000000011 1
b00000000000000000000000000000001 5
1D
b110010011111100011000010111011001101111011000001010010100011001 F
b011 O
b0000000000000000000000000000000000000000000000000000000001010001 P
b00000000000000000000000000000000 ^
0_
b1101111010101101101111101110111111011110101011011011111011101111 `
1c
1e
#52
0c
0e
#53
0&
b0000000000000000011111111000101001110010000011100010110110000000 (
1-
b00000000000000000000000000000100 1
b00000000000000000000000000000000 5
0D
b100 O
0\
b00000000 ]
1c
1e
#54
0c
0e
#55
0#
1$
b00000000000000000000000000000101 1
0[
1\
b10101101 ]
b00000000000000000000101110101101 ^
1_
b1010110111110100011001111010000110101111000001110011010101010011 `
1c
1e
#56
0c
0e
#57
0$
1&
1'
0-
b00000000000000000000000000000110 1
b000000000000000000000000000000000000000000000000001101001000011 F
b101 O
b0000000000000000000000000000000000000000000000000000000001010011 R
0_
b1101111010101101101111101110111111011110101011011011111011101111 `
1c
1e
#58
0c
0e
#59
0&
0'
1*
b00000000000000000000000000000111 1
1E
b0000000000000000000000000000000000000000000000000001101001000011 H
b000000000000000000000000000000000000000000000000001101001000011 M
b110 O
1c
1e
#60
0c
0e
#61
1&
b0000000000000000011111111000101001110010000011100010110010000001 (
0*
b00000000000000000000000000001000 1
b001 O
b00000000000000000000000000000001 T
b0000000000000000011111111000101001110010000011100010110010000001 U
b0000000000000000011111111000101001110010000011100010110100000001 W
1c
1e
#62
0c
0e
#63
0&
b0000000000000000011111111000101001110010000011100010110110000000 (
1-
b00000000000000000000000000001001 1
b010 O
1c
1e
#64
0c
0e
#65
b00000000000000000000000000001010 1
1_
b1011011000000000000000000000000000000001000001110110101100010000 `
1c
1e
#66
0c
0e
#67
1&
b0000000000000000011111111000101001110010000011100010110100000001 (
0-
b00000000000000000000000000001011 1
b000000000000000000000000000000000000000000000000000010100110000 F
b011 O
b0000000000000000000000000000000000000000000000000000000000010000 P
0_
b1101111010101101101111101110111111011110101011011011111011101111 `
1c
1e
#68
0c
0e
#69
1#
0&
b0000000000000000011111111000101001110010000011100010110110000000 (
1-
b00000000000000000000000000001100 1
b100 O
1[
0\
b00000000 ]
b00000000000000000000000000000000 ^
1c
1e
#70
0c
0e
#71
0#
1$
b00000000000000000000000000001101 1
1_
b1000000010101101111101000110011110100001101011110000011100110101 `
1c
1e
#72
0c
0e
#73
0$
1&
1'
0-
b00000000000000000000000000001110 1
b000000000000000000000000000000000000000000000000000001101010000 F
b101 O
b0000000000000000000000000000000000000000000000000000000000110101 R
0[
1\
b10101101 ]
b00000000000000000000101110101101 ^
0_
b1101111010101101101111101110111111011110101011011011111011101111 `
1c
1e
#74
0c
0e
#75
1#
0&
0'
1*
10
b00000000000000000000000000001111 1
b0000000000000000000000000000000000000000000000000001110110010011 H
1K
b000000000000000000000000000000000000000000000000001110110010011 M
b110 O
1[
0\
b00000000 ]
b00000000000000000000000000000000 ^
1c
1e
#76
0c
0e
#77
0#
1$
0*
b0000000000000000000000000000000000000000000000000001110110010011 +
00
b00000000000000000000000000010000 1
b00000000000000000000000000001111 =
0K
1L
b000 O
b00000000000000000000000000000010 T
b0000000000000000011111111000101001110010000011100010110010000010 U
b0000000000000000011111111000101001110010000011100010110100000010 W
1c
1e
#78
0c
0e
#79
0$
1/
b00000000000000000000000000000000 1
b00000000000000000000000000000000 T
b0000000000000000011111111000101001110010000011100010110010000000 U
b0000000000000000011111111000101001110010000011100010110100000000 W
0[
1\
b10101101 ]
b00000000000000000000101110101101 ^
1c
1e
#80
0c
0e
#81
b00000000000000000000000000000010 <
1c
1e
#82
0c
0e
#83
1c
1e
#84
0c
0e
#85
1c
1e
#86
0c
0e
#87
1c
1e
#88
0c
0e
#89
1c
1e
#90
0c
0e
#91
1c
1e
#92
0c
0e
#93
1c
1e
#94
0c
0e
#95
1c
1e
#96
0c
0e
#97
1c
1e
#98
0c
0e
#99
1c
1e
#100
0c
0e
#101
1c
1e
#102
0c
0e
#103
1c
1e
#104
0c
0e
#105
1c
1e
#106
0c
0e
#107
1c
1e
#108
0c
0e
#109
1c
1e
#110
0c
0e
#111
1c
1e
#112
0c
0e
#113
1c
1e
#114
0c
0e
#115
1c
1e
#116
0c
0e
#117
1c
1e
#118
0c
0e
#119
1c
1e
#120
0c
0e
#121
1c
1e
#122
0c
0e
#123
1c
1e
#124
0c
0e
#125
1c
1e
#126
0c
0e
#127
1c
1e
#128
0c
0e
#129
1c
1e
#130
0c
0e
#131
1c
1e
#132
0c
0e
#133
1c
1e
#134
0c
0e
#135
1c
1e
#136
0c
0e
#137
1c
1e
#138
0c
0e
#139
1#
1[
0\
b00000000 ]
b00000000000000000000000000000000 ^
1c
1e
#140
0c
0e
#141
0#
1$
b00000000000000000000000000000010 %
1c
1e
#142
0c
0e
#143
0$
0[
1\
b10101101 ]
b00000000000000000000101110101101 ^
1c
1e
#144
0c
0e
#145
1c
1e
#146
0c
0e
#147
1c
1e
#148
0c
0e
#149
1c
1e
#150
0c
0e
#151
1c
1e
#152
0c
0e
#153
1c
1e
#154
0c
0e
#155
1c
1e
#156
0c
0e
#157
1c
1e
#158
0c
0e
#159
1c
1e
#160
0c
0e
#161
1#
1[
0\
b00000100 ]
b00000000000000000000000000000000 ^
1c
1e
#162
0c
0e
#163
0#
1$
b00000000000000000000000000001111 %
1c
1e
#164
0c
0e
#165
0$
0[
1\
b10101101 ]
b00000000000000000000101110101101 ^
1c
1e
#166
0c
0e
#167
1c
1e
#168
0c
0e
#169
1c
1e
#170
0c
0e
#171
1c
1e
#172
0c
0e
#173
1c
1e
#174
0c
0e
#175
1c
1e
#176
0c
0e
#177
1c
1e
#178
0c
0e
#179
1c
1e
#180
0c
0e
#181
1c
1e
#182
0c
0e
#183
1c
1e
#184
0c
0e
#185
1c
1e
#186
0c
0e
#187
1c
1e
#188
0c
0e
#189
1c
1e
#190
0c
0e
#191
1b
1c
1e
1f
#192
0b
0c
0e
0f
#193
1c
1e
